@model IEnumerable<CLM.Models.ViewModels.ArqueoVM>
@using CLM.Models.ViewModels
@using CLM.Services

@{
    ViewData["Title"] = "Arqueo";
    var lng = Model.Count().ToString().Length;
    var id = ViewContext.RouteData.Values["id"];
    var rpp = ViewData["rpp"] as string;
    var pg = ViewData["pg"] as string;
    var asc = ViewData["asc"] as string;
    var srt = ViewData["srt"] as string;
    var last = ViewData["last"] as string;
    var _asc = Convert.ToBoolean(asc);
    var Filters = ViewData["Filters"] as IDictionary<string, List<string>>;
    var val = ViewData["val"] as string;
    var controller = this.ViewContext.RouteData.Values["controller"].ToString();
    var action = this.ViewContext.RouteData.Values["action"].ToString();
    var oficinas = ViewData["Oficinas"] as List<string>;
}

@section Styles{
    <link rel="stylesheet" href="~/css/dinamicTable.css" />
}
<div class="beforeDT">
    <div class="col-lg-2 col-md-4 col-sm-8 col-xs-12">
        <h1>Arqueos</h1>
    </div>
    <div class="col-lg-1 col-md-1 col-sm-1 col-xs-3">
        @await Html.PartialAsync("_ClearFilters", Url.RouteUrl(this.ViewContext.RouteData.Values))
    </div>
    <div class="col-lg-9 col-md-7 col-sm-3 col-xs-9">
        <span class="">
            <a class="btn btn-block btn-success" asp-action="Create">Arquear Caja</a>
        </span>
    </div>
    @await Html.PartialAsync("_Paging", new PagingPartial
    {
        Pg = Convert.ToInt32(pg),
        Action = action,
        Asc = _asc,
        Controller = controller,
        Last = Convert.ToInt32(last),
        Rpp = Convert.ToInt32(rpp),
        Srt = srt
    })
</div>
<div id="constrainer2">
    <table class="table">
        <thead>
            <tr>
                <th colspan="3">
                    Filtros
                </th>
                <th colspan="8" style="background-color:#78909c !important">
                    Flujo Contable
                </th>
                <th colspan="4" style="background-color:#78909c !important">
                    Flujo Real
                </th>
                <th colspan="4" rowspan="2" style="background-color:#78909c !important">
                    Diferencias
                </th>
            </tr>
            <tr>
                <th rowspan="2" style="background-color:#4dd0e1 !important">
                    @await Html.PartialAsync("_TableFilter",new TableFilterVM
               {
                   //fixed
                   Srt = srt,
                   Asc = _asc,
                   Rpp = rpp,
                   Controller = controller,
                   Action = action,
                   //config
                   Id = "OficinaId",
                   Name = Html.DisplayNameFor(model => model.OficinaId),
                   Type = FilterType.select
               })
                </th>
                <th rowspan="2" style="background-color:#4dd0e1 !important">
                    @await Html.PartialAsync("_TableFilter",new TableFilterVM
               {
                   //fixed
                   Srt = srt,
                   Asc = _asc,
                   Rpp = rpp,
                   Controller = controller,
                   Action = action,
                   //config
                   Id = "Fecha",
                   Val = Filters.ContainsKey("Fecha") ? Filters["Fecha"].First() : Html.DisplayNameFor(model => model.Fecha),
                   Name = Html.DisplayNameFor(model => model.Fecha),
                   Type = FilterType.date
               })
                </th>
                <th rowspan="2" style="background-color:#78909c !important">
                    @await Html.PartialAsync("_TableFilter",new TableFilterVM
               {
                   //fixed
                   Srt = srt,
                   Asc = _asc,
                   Rpp = rpp,
                   Controller = controller,
                   Action = action,
                   //config
                   Id = "ApplicationUserId",
                   Name = Html.DisplayNameFor(model => model.ApplicationUserId),
                   MaxOptions = 10,
                   LiveSearch = true,
                   Type = FilterType.select
               })
                </th>
                <th rowspan="2" style="background-color:#ffe599 !important">
                    @await Html.PartialAsync("_TableFilter",new TableFilterVM
                    {
                    //fixed
                    Srt = srt,
                    Asc = _asc,
                    Rpp = rpp,
                    Controller = controller,
                    Action = action,
                    //config
                    Id = "SaldoAnterior",
                    Name = Html.DisplayNameFor(model => model.SaldoAnterior)
                    })
                </th>
                <th colspan="4" style="background-color:#d9ead3 !important">
                    Ingresos
                </th>
                <th colspan="3" style="background-color:#d0e0e3 !important">
                    Egresos
                </th>
                <th colspan="4" style="background-color:#4a86e8 !important">
                    Montos Contabilizados
                </th>
            </tr>
            <tr>
                <th style="background-color:#ebeff1 !important">
                    @await Html.PartialAsync("_TableFilter",new TableFilterVM
                    {
                    //fixed
                    Srt = srt,
                    Asc = _asc,
                    Rpp = rpp,
                    Controller = controller,
                    Action = action,
                    //config
                    Id = "PagosEfectivo",
                    Name = Html.DisplayNameFor(model => model.PagosEfectivo)
                    })
                </th>
                <th style="background-color:#ebeff1 !important">
                    @await Html.PartialAsync("_TableFilter",new TableFilterVM
                    {
                    //fixed
                    Srt = srt,
                    Asc = _asc,
                    Rpp = rpp,
                    Controller = controller,
                    Action = action,
                    //config
                    Id = "PagosCheque",
                    Name = Html.DisplayNameFor(model => model.PagosCheque)
                    })
                </th>
                <th style="background-color:#ebeff1 !important">
                    @await Html.PartialAsync("_TableFilter",new TableFilterVM
                    {
                    //fixed
                    Srt = srt,
                    Asc = _asc,
                    Rpp = rpp,
                    Controller = controller,
                    Action = action,
                    //config
                    Id = "PagosTransferencia",
                    Name = Html.DisplayNameFor(model => model.PagosTransferencia)
                    })
                </th>
                <th style="background-color:#ebeff1 !important">
                    @await Html.PartialAsync("_TableFilter",new TableFilterVM
                    {
                    //fixed
                    Srt = srt,
                    Asc = _asc,
                    Rpp = rpp,
                    Controller = controller,
                    Action = action,
                    //config
                    Id = "PagosTotal",
                    Name = Html.DisplayNameFor(model => model.PagosTotal)
                    })
                </th>
                <th style="background-color:#ebeff1 !important">
                    @await Html.PartialAsync("_TableFilter",new TableFilterVM
                    {
                    //fixed
                    Srt = srt,
                    Asc = _asc,
                    Rpp = rpp,
                    Controller = controller,
                    Action = action,
                    //config
                    Id = "RetiroEfectivo",
                    Name = Html.DisplayNameFor(model => model.RetiroEfectivo)
                    })
                </th>
                <th style="background-color:#ebeff1 !important">
                    @await Html.PartialAsync("_TableFilter",new TableFilterVM
                    {
                    //fixed
                    Srt = srt,
                    Asc = _asc,
                    Rpp = rpp,
                    Controller = controller,
                    Action = action,
                    //config
                    Id = "RetiroCheque",
                    Name = Html.DisplayNameFor(model => model.RetiroCheque)
                    })
                </th>
                <th style="background-color:#ebeff1 !important">
                    @await Html.PartialAsync("_TableFilter",new TableFilterVM
                    {
                    //fixed
                    Srt = srt,
                    Asc = _asc,
                    Rpp = rpp,
                    Controller = controller,
                    Action = action,
                    //config
                    Id = "RetiroTotal",
                    Name = Html.DisplayNameFor(model => model.RetiroTotal)
                    })
                </th>
                <th style="background-color:#ebeff1 !important">
                    @await Html.PartialAsync("_TableFilter",new TableFilterVM
                    {
                    //fixed
                    Srt = srt,
                    Asc = _asc,
                    Rpp = rpp,
                    Controller = controller,
                    Action = action,
                    //config
                    Id = "ArqueoEfectivo",
                    Name = Html.DisplayNameFor(model => model.ArqueoEfectivo)
                    })
                </th>
                <th style="background-color:#ebeff1 !important">
                    @await Html.PartialAsync("_TableFilter",new TableFilterVM
                    {
                    //fixed
                    Srt = srt,
                    Asc = _asc,
                    Rpp = rpp,
                    Controller = controller,
                    Action = action,
                    //config
                    Id = "ArqueoCheques",
                    Name = Html.DisplayNameFor(model => model.ArqueoCheques)
                    })
                </th>
                <th style="background-color:#ebeff1 !important">
                    @await Html.PartialAsync("_TableFilter",new TableFilterVM
                    {
                    //fixed
                    Srt = srt,
                    Asc = _asc,
                    Rpp = rpp,
                    Controller = controller,
                    Action = action,
                    //config
                    Id = "ArqueoTransferencias",
                    Name = Html.DisplayNameFor(model => model.ArqueoTransferencias)
                    })
                </th>
                <th style="background-color:#ebeff1 !important">
                    @await Html.PartialAsync("_TableFilter",new TableFilterVM
                    {
                    //fixed
                    Srt = srt,
                    Asc = _asc,
                    Rpp = rpp,
                    Controller = controller,
                    Action = action,
                    //config
                    Id = "ArqueoTotal",
                    Name = Html.DisplayNameFor(model => model.ArqueoTotal)
                    })
                </th>
                <th style="background-color:#ebeff1 !important">
                    @await Html.PartialAsync("_TableFilter",new TableFilterVM
                    {
                    //fixed
                    Srt = srt,
                    Asc = _asc,
                    Rpp = rpp,
                    Controller = controller,
                    Action = action,
                    //config
                    Id = "DiferenciaEfectivo",
                    Name = Html.DisplayNameFor(model => model.DiferenciaEfectivo)
                    })
                </th>
                <th style="background-color:#ebeff1 !important">
                    @await Html.PartialAsync("_TableFilter",new TableFilterVM
                    {
                    //fixed
                    Srt = srt,
                    Asc = _asc,
                    Rpp = rpp,
                    Controller = controller,
                    Action = action,
                    //config
                    Id = "DiferenciaCheques",
                    Name = Html.DisplayNameFor(model => model.DiferenciaCheques)
                    })
                </th>
                <th style="background-color:#ebeff1 !important">
                    @await Html.PartialAsync("_TableFilter",new TableFilterVM
                    {
                    //fixed
                    Srt = srt,
                    Asc = _asc,
                    Rpp = rpp,
                    Controller = controller,
                    Action = action,
                    //config
                    Id = "DiferenciaTransferencias",
                    Name = Html.DisplayNameFor(model => model.DiferenciaTransferencias)
                    })
                </th>
                <th style="background-color:#ebeff1 !important">
                    @await Html.PartialAsync("_TableFilter",new TableFilterVM
                    {
                    //fixed
                    Srt = srt,
                    Asc = _asc,
                    Rpp = rpp,
                    Controller = controller,
                    Action = action,
                    //config
                    Id = "DiferenciaTotal",
                    Name = Html.DisplayNameFor(model => model.DiferenciaTotal)
                    })
                </th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.OfficeName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Fecha)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ApplicationUserName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.SaldoAnterior)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.PagosEfectivo)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.PagosCheque)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.PagosTransferencia)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.PagosTotal)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.RetiroEfectivo)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.RetiroCheque)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.RetiroTotal)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ArqueoEfectivo)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ArqueoCheques)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ArqueoTransferencias)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ArqueoTotal)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.DiferenciaEfectivo)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.DiferenciaCheques)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.DiferenciaTransferencias)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.DiferenciaTotal)
                </td>
                @*<td>
            <a class="btn btn-block btn-warning" asp-action="Edit" asp-route-id="@item.Id"><i class="fas fa-edit fa-fw"></i>Editar</a> |
            <a class="btn btn-info btn-block" asp-action="Details" asp-route-id="@item.Id"><i class="fas fa-eye fa-fw"></i>Detalles</a> |
            <a class="btn btn-danger btn-block" asp-action="Delete" asp-route-id="@item.Id"><i class="fas fa-trash-alt fa-fw"></i>Eliminar</a>
        </td>*@
            </tr>
            }
        </tbody>
    </table>
</div>

@section Scripts{
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    @{await Html.RenderPartialAsync("_Filter", new FilterVM { Action = action, Controller = controller, Asc = _asc, Rpp = rpp, Srt = srt, Val = val });}
    <script src="~/js/modal-action.js" asp-append-version="true"></script>
    <script src="~/js/dinamicTable.js" asp-append-version="true"></script>
    <link href="https://gitcdn.github.io/bootstrap-toggle/2.2.2/css/bootstrap-toggle.min.css" rel="stylesheet">
    <script src="https://gitcdn.github.io/bootstrap-toggle/2.2.2/js/bootstrap-toggle.min.js"></script>
}

@Html.Partial("_Modal", new BootstrapModel { ID = "modal-action", AreaLabeledId = "modal-action-label", Size = ModalSize.Medium })
